{"version":3,"sources":["components/AnimeInfo/AnimeInfo.js","App.js","reportWebVitals.js","index.js"],"names":["AnimeInfo","state","mode","collections","this","props","anime","filter","c","collectionHasThemes","map","col","index","name","className","themes","theme","type","idx","order","version","isNSFW","hasSpoilers","sources","source","i","target","href","link","controls","src","opened","loading","role","year","altNames","join","data-dismiss","aria-label","onClick","onAnimeClosed","aria-hidden","onModeToggle","id","setState","collection","console","log","some","t","Component","App","animeList","list","infoShown","infoLoading","endPoint","Axios","get","then","e","data","catch","Fragment","placeholder","onChange","value","length","toLowerCase","concat","toString","includes","trim","onAnimeClicked","bind","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.742b92c2.chunk.js","sourcesContent":["import { Component, Fragment } from \"react\";\r\n\r\nimport './AnimeInfo.css';\r\n\r\nexport default class AnimeInfo extends Component {\r\n\r\n  //#region Properties\r\n\r\n  state = {\r\n    mode: 0\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Lifecycle\r\n\r\n  render() {\r\n\r\n    let collections = [];\r\n\r\n    if (this.props.anime && this.props.anime.collections) {\r\n      collections = this.props.anime.collections.filter(c => this.collectionHasThemes(c, this.state.mode)).map((col, index) => (\r\n        <div key={index}>\r\n          <h6>{col.name}</h6>\r\n          <ul className=\"list-group mb-2\">\r\n            {\r\n              col.themes.filter(theme => theme.type === this.state.mode).map((theme, idx) => (\r\n                <li\r\n                  className=\"list-group-item\"\r\n                  key={idx}>\r\n                  <div>\r\n                    <span className=\"badge badge-primary mr-1\">{this.state.mode === 0 ? 'OP' : 'ED'} {theme.order}</span>\r\n                    <span className=\"badge badge-secondary mr-1\">V{theme.version}</span>\r\n                    <b>{theme.name}</b>\r\n\r\n                    {theme.isNSFW === true ? <span className=\"badge badge-danger ml-1 float-right\">NSFW</span> : ''}\r\n                    {theme.hasSpoilers === true ? <span className=\"badge badge-danger ml-1 float-right\">SPOILERS</span> : ''}\r\n                  </div>\r\n                  <ul className=\"list-group mt-2\">\r\n                    {\r\n                      theme.sources.map((source, i) => (\r\n                        <li\r\n                          className=\"list-group-item list-group-item-source\"\r\n                          key={i}\r\n                        >\r\n                          <a target=\"_blank\"\r\n                            href={source.link}>Video</a>\r\n                          <audio controls>\r\n                            <source\r\n                              src={source.link}\r\n                              type=\"audio/ogg\"\r\n                            ></source>\r\n                          </audio>\r\n                        </li>\r\n                      ))\r\n                    }\r\n                  </ul>\r\n                </li>\r\n              ))\r\n            }\r\n          </ul>\r\n        </div>\r\n      ));\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className={'modal ' + (this.props.opened ? 'open' : '')}>\r\n          {\r\n            this.props.loading ?\r\n              <div className=\"spinner spinner-border text-light float-right\" role=\"status\">\r\n                <span className=\"visually-hidden\"></span>\r\n              </div> :\r\n              <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">\r\n                      <div className=\"title\">\r\n                        {this.props.anime.name}\r\n                        {this.props.anime.year\r\n                          ? <span className=\"badge badge-secondary float-right\">{this.props.anime.year}</span>\r\n                          : ''}\r\n                      </div>\r\n                      <p className=\"alt\">{this.props.anime.altNames ? this.props.anime.altNames.join(\",\") : ''}</p>\r\n                    </h5>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"close\"\r\n                      data-dismiss=\"modal\"\r\n                      aria-label=\"Close\"\r\n                      onClick={() => this.props.onAnimeClosed()}>\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"modal-body\">\r\n                    <ul className=\"nav nav-tabs\">\r\n                      <li className=\"nav-item\">\r\n                        <a className={'nav-link ' + (this.state.mode === 0 ? 'active' : '')}\r\n                          onClick={() => this.onModeToggle(0)}>Openings</a>\r\n                      </li>\r\n                      <li className=\"nav-item\">\r\n                        <a className={'nav-link ' + (this.state.mode === 1 ? 'active' : '')}\r\n                          onClick={() => this.onModeToggle(1)}>Endings</a>\r\n                      </li>\r\n                    </ul>\r\n\r\n                    <div className=\"tab\">\r\n                      {collections}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"modal-footer\">\r\n                    <a\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary\"\r\n                      target=\"_blank\"\r\n                      href={`https://myanimelist.net/anime/${this.props.anime.id}`}\r\n                    >Visit MAL Page</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n          }\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Events\r\n\r\n  onModeToggle(mode) {\r\n    this.setState({ mode })\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Methods\r\n\r\n  collectionHasThemes(collection, type) {\r\n    console.log({collection});\r\n    return collection.themes.some(t => t.type === type);\r\n  }\r\n\r\n  //#endregion\r\n}\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\n\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport AnimeInfo from './components/AnimeInfo/AnimeInfo';\r\n\r\nexport default class App extends Component {\r\n\r\n  //#region Properties\r\n\r\n  state = {\r\n    animeList: [],\r\n    list: [],\r\n    anime: {},\r\n    infoShown: false,\r\n    loading: false,\r\n    infoLoading: false\r\n  }\r\n\r\n  endPoint = 'https://anusic-api.herokuapp.com/api/v1';\r\n\r\n  //#endregion\r\n\r\n  //#region Lifecycle\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    Axios.get(`${this.endPoint}/anime`)\r\n      .then(e => {\r\n        this.setState({ animeList: e.data, list: e.data, loading: false });\r\n      })\r\n      .catch(() => this.setState({ loading: false }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <nav className=\"navbar sticky-top navbar-light bg-light px-5\">\r\n          <a href=\"/#\" className=\"navbar-brand\">Anusic React</a>\r\n          <div className=\"form-inline\">\r\n            <input\r\n              className=\"form-control mr-sm-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n              onChange={(e) => {\r\n                if (e.target.value.length > 0) {\r\n                  this.setState({\r\n                    list: this.state.animeList.filter(anime =>\r\n                      anime.name.toLowerCase()\r\n                        .concat((anime.altNames || []).join(' ').toLowerCase())\r\n                        .concat((anime.year || 0).toString())\r\n                        .includes(e.target.value.toLowerCase().trim())\r\n                    )\r\n                  });\r\n                } else {\r\n                  this.setState({ list: this.state.animeList });\r\n                }\r\n              }} />\r\n          </div>\r\n        </nav>\r\n\r\n        <main className=\"p-5\">\r\n          <div\r\n            className=\"alert alert-dark\"\r\n            role=\"alert\">\r\n            <b>{this.state.list.length}</b> Anime fetched!\r\n\r\n            {\r\n              this.state.loading ?\r\n                <div className=\"spinner spinner-border float-right\" role=\"status\">\r\n                  <span className=\"visually-hidden\"></span>\r\n                </div>\r\n                : ''\r\n            }\r\n          </div>\r\n          <ul\r\n            className=\"list-group\">\r\n            {\r\n              this.state.list.map((e, i) => (\r\n                <a\r\n                  className=\"list-group-item list-group-item-action\"\r\n                  key={i}\r\n                  onClick={() => this.onAnimeClicked(e)}\r\n                >\r\n                  <span className=\"name\">{e.name}</span>\r\n                  {e.year\r\n                    ? <span className=\"badge badge-secondary float-right\">{e.year}</span>\r\n                    : ''}\r\n\r\n                  {e.altNames && e.altNames.length > 0\r\n                    ? <p className=\"alt\">{e.altNames.join(\",\")}</p>\r\n                    : ''}\r\n                </a>\r\n              ))\r\n            }\r\n          </ul>\r\n        </main>\r\n\r\n        <AnimeInfo\r\n          opened={this.state.infoShown}\r\n          anime={this.state.anime}\r\n          loading={this.state.infoLoading}\r\n          onAnimeClosed={this.onAnimeClosed.bind(this)}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Events\r\n\r\n  onAnimeClicked(anime) {\r\n    this.setState({ infoShown: true, infoLoading: true });\r\n\r\n    Axios.get(`${this.endPoint}/anime/${anime.id}`)\r\n      .then(e => {\r\n        this.setState({ infoShown: true, infoLoading: false, anime: e.data })\r\n      })\r\n      .catch(() => this.setState({ infoShown: false, infoLoading: false }));\r\n  }\r\n\r\n  onAnimeClosed() {\r\n    this.setState({ infoShown: false });\r\n  }\r\n\r\n  //#endregion\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}