{"version":3,"sources":["components/AnimeInfo/AnimeInfo.js","App.js","reportWebVitals.js","index.js"],"names":["AnimeInfo","state","mode","anime","loading","this","setState","Axios","get","props","endPoint","animeId","then","e","data","catch","onAnimeClosed","collections","tabs","filter","c","collectionHasThemes","map","col","index","open","class","getThemesCount","name","className","themes","theme","type","idx","order","version","isNSFW","hasSpoilers","sources","source","i","target","href","link","controls","src","openingCount","reduce","acc","endingCount","length","push","onClick","onModeToggle","role","year","altNames","join","data-dismiss","aria-label","aria-hidden","id","collection","some","t","Component","App","animeList","list","infoShown","modal","bind","Fragment","placeholder","onChange","value","toLowerCase","concat","toString","includes","trim","onAnimeClicked","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23d72783.chunk.js","sourcesContent":["import { Component, Fragment } from \"react\";\r\nimport Axios from 'axios'\r\n\r\nimport './AnimeInfo.css';\r\n\r\nexport default class AnimeInfo extends Component {\r\n\r\n  //#region Properties\r\n\r\n  state = {\r\n    mode: 0,\r\n    anime: {},\r\n    loading: false\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Lifecycle\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    Axios.get(`${this.props.endPoint}/anime/${this.props.animeId}`)\r\n      .then(e => {\r\n        this.setState({ loading: false, anime: e.data });\r\n      })\r\n      .catch(() => {\r\n        this.setState({ loading: false });\r\n        this.props.onAnimeClosed();\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    let collections = [];\r\n    let tabs = [];\r\n\r\n    if (this.state.anime && this.state.anime.collections) {\r\n\r\n      // Populating the collections\r\n      collections = this.state.anime.collections.filter(c => this.collectionHasThemes(c, this.state.mode)).map((col, index) => (\r\n        <details key={index + (100 * (this.state.mode + 1))} open={index === 0}>\r\n          <summary>\r\n            <h6><span class=\"badge badge-light\">{this.getThemesCount(col, this.state.mode)}</span> {col.name}</h6>\r\n          </summary>\r\n\r\n          <ul className=\"list-group mb-2\">\r\n            {\r\n              col.themes.filter(theme => theme.type === this.state.mode).map((theme, idx) => (\r\n                <li\r\n                  className=\"list-group-item\"\r\n                  key={idx + (200 * (this.state.mode + 1))}>\r\n                  <div>\r\n                    <span className=\"badge badge-primary mr-1\">{this.state.mode === 0 ? 'OP' : 'ED'} {theme.order}</span>\r\n                    <span className=\"badge badge-secondary mr-1\">V{theme.version}</span>\r\n                    <b>{theme.name}</b>\r\n\r\n                    {theme.isNSFW === true ? <span className=\"badge badge-danger ml-1 float-right\">NSFW</span> : ''}\r\n                    {theme.hasSpoilers === true ? <span className=\"badge badge-danger ml-1 float-right\">SPOILERS</span> : ''}\r\n                  </div>\r\n                  <ul className=\"list-group mt-2\">\r\n                    {\r\n                      theme.sources.map((source, i) => (\r\n                        <li\r\n                          className=\"list-group-item list-group-item-source\"\r\n                          key={i + (300 * (this.state.mode + 1))}\r\n                        >\r\n                          <a target=\"_blank\"\r\n                            href={source.link}>Video</a>\r\n                          <audio controls>\r\n                            <source\r\n                              src={source.link}\r\n                              type=\"audio/ogg\"\r\n                            ></source>\r\n                          </audio>\r\n                        </li>\r\n                      ))\r\n                    }\r\n                  </ul>\r\n                </li>\r\n              ))\r\n            }\r\n          </ul>\r\n        </details>\r\n      ));\r\n\r\n      // Populating the tabs\r\n      const openingCount = this.state.anime.collections.reduce((acc, c) => acc + this.getThemesCount(c, 0), 0);\r\n      const endingCount = this.state.anime.collections.reduce((acc, c) => acc + this.getThemesCount(c, 1), 0);\r\n\r\n      if (this.state.anime.collections.filter(c => this.collectionHasThemes(c, 0)).length > 0) {\r\n        tabs.push(\r\n          <li className=\"nav-item\">\r\n            <a className={'nav-link ' + (this.state.mode === 0 ? 'active' : '')}\r\n              onClick={() => this.onModeToggle(0)}><span class=\"badge badge-secondary\">{openingCount}</span> Opening(s)</a>\r\n          </li>\r\n        )\r\n      } else if (this.state.mode === 0 && !this.state.loading) {\r\n        // If no openings are found, switch to the endings tab\r\n        this.setState({ mode: 1 });\r\n      }\r\n\r\n      if (this.state.anime.collections.filter(c => this.collectionHasThemes(c, 1)).length > 0) {\r\n        tabs.push(\r\n          <li className=\"nav-item\">\r\n            <a className={'nav-link ' + (this.state.mode === 1 ? 'active' : '')}\r\n              onClick={() => this.onModeToggle(1)}><span class=\"badge badge-secondary\">{endingCount}</span> Ending(s)</a>\r\n          </li>\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"modal\">\r\n          {\r\n            this.state.loading ?\r\n              <div className=\"spinner spinner-border text-light float-right\" role=\"status\">\r\n                <span className=\"visually-hidden\"></span>\r\n              </div> :\r\n              <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">\r\n                      <div className=\"title\">\r\n                        {this.state.anime.name}\r\n                        {this.state.anime.year\r\n                          ? <span className=\"badge badge-secondary float-right\">{this.state.anime.year}</span>\r\n                          : ''}\r\n                      </div>\r\n                      <p className=\"alt\">{this.state.anime.altNames ? this.state.anime.altNames.join(\",\") : ''}</p>\r\n                    </h5>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"close\"\r\n                      data-dismiss=\"modal\"\r\n                      aria-label=\"Close\"\r\n                      onClick={() => this.props.onAnimeClosed()}>\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"modal-body\">\r\n                    <ul className=\"nav nav-tabs\">\r\n                      {tabs}\r\n                    </ul>\r\n\r\n                    <div className=\"tab\">\r\n                      {collections}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"modal-footer\">\r\n                    <a\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary\"\r\n                      target=\"_blank\"\r\n                      href={`https://myanimelist.net/anime/${this.state.anime.id}`}\r\n                    >Visit MAL Page</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n          }\r\n        </div>\r\n      </Fragment >\r\n    )\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Events\r\n\r\n  onModeToggle(mode) {\r\n    this.setState({ mode })\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Methods\r\n\r\n  collectionHasThemes(collection, type) {\r\n    return collection.themes.some(t => t.type === type);\r\n  }\r\n\r\n  getThemesCount(collection, type) {\r\n    return collection.themes.filter((t, index) => t.type === type && t.version === 1).length;\r\n  }\r\n\r\n  //#endregion\r\n}\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\n\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport AnimeInfo from './components/AnimeInfo/AnimeInfo';\r\n\r\nexport default class App extends Component {\r\n\r\n  //#region Properties\r\n\r\n  state = {\r\n    animeList: [],\r\n    list: [],\r\n    animeId: -1,\r\n    infoShown: false,\r\n    loading: false\r\n  }\r\n\r\n  endPoint = 'https://anusic-api.herokuapp.com/api/v1';\r\n\r\n  //#endregion\r\n\r\n  //#region Lifecycle\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    Axios.get(`${this.endPoint}/anime`)\r\n      .then(e => {\r\n        this.setState({ animeList: e.data, list: e.data, loading: false });\r\n      })\r\n      .catch(() => this.setState({ loading: false }));\r\n  }\r\n\r\n  render() {\r\n    let modal = null;\r\n\r\n    if (this.state.infoShown) {\r\n      modal = <AnimeInfo\r\n        endPoint={this.endPoint}\r\n        animeId={this.state.animeId}\r\n        onAnimeClosed={this.onAnimeClosed.bind(this)}\r\n      />;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <nav className=\"navbar sticky-top navbar-light bg-light px-5\">\r\n          <a href=\"/#\" className=\"navbar-brand\">Anusic React</a>\r\n          <div className=\"form-inline\">\r\n            <input\r\n              className=\"form-control mr-sm-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n              onChange={(e) => {\r\n                if (e.target.value.length > 0) {\r\n                  this.setState({\r\n                    list: this.state.animeList.filter(anime =>\r\n                      anime.name.toLowerCase()\r\n                        .concat((anime.altNames || []).join(' ').toLowerCase())\r\n                        .concat((anime.year || 0).toString())\r\n                        .includes(e.target.value.toLowerCase().trim())\r\n                    )\r\n                  });\r\n                } else {\r\n                  this.setState({ list: this.state.animeList });\r\n                }\r\n              }} />\r\n          </div>\r\n        </nav>\r\n\r\n        <main className=\"p-5\">\r\n          <div\r\n            className=\"alert alert-dark\"\r\n            role=\"alert\">\r\n            <b>{this.state.list.length}</b> Anime fetched!\r\n\r\n            {\r\n              this.state.loading ?\r\n                <div className=\"spinner spinner-border float-right\" role=\"status\">\r\n                  <span className=\"visually-hidden\"></span>\r\n                </div>\r\n                : ''\r\n            }\r\n          </div>\r\n          <ul\r\n            className=\"list-group\">\r\n            {\r\n              this.state.list.map((e, i) => (\r\n                <a\r\n                  className=\"list-group-item list-group-item-action\"\r\n                  key={i}\r\n                  onClick={() => this.onAnimeClicked(e)}\r\n                >\r\n                  <span className=\"name\">{e.name}</span>\r\n                  {e.year\r\n                    ? <span className=\"badge badge-secondary float-right\">{e.year}</span>\r\n                    : ''}\r\n\r\n                  {e.altNames && e.altNames.length > 0\r\n                    ? <p className=\"alt\">{e.altNames.join(\",\")}</p>\r\n                    : ''}\r\n                </a>\r\n              ))\r\n            }\r\n          </ul>\r\n        </main>\r\n\r\n        {modal}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Events\r\n\r\n  onAnimeClicked(anime) {\r\n    this.setState({ infoShown: true, animeId: anime.id });\r\n  }\r\n\r\n  onAnimeClosed() {\r\n    this.setState({ infoShown: false });\r\n  }\r\n\r\n  //#endregion\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}